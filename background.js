// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
chrome.action.disable();

// –ü—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤–∫–ª–∞–¥–∫–∏ –≤–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω—É–∂–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
chrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {
    if (tab.url && tab.url.startsWith("https://apimonster.ru/ozon/orders/")) {
        chrome.action.enable(tabId);
    } else {
        chrome.action.disable(tabId);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
chrome.action.onClicked.addListener((tab) => {
    chrome.scripting.executeScript({
        target: { tabId: tab.id },
        func: () => {
            try {
                const rows = document.querySelectorAll("tr");
                let selectedCount = 0;
                let alreadyCheckedCount = 0;

                rows.forEach((row) => {
                    const statusCell = row.querySelector("td:nth-child(4)");
                    const barcodeCell = row.querySelector("td:nth-child(6)");
                    const checkbox = row.querySelector("input.ozon_order_checkbox");

                    const hasBarcodeLink = barcodeCell?.querySelector("a");
                    const wasRequested = barcodeCell?.innerText.includes("–ë—ã–ª –∑–∞–ø—Ä–æ—Å");

                    if (
                        statusCell &&
                        barcodeCell &&
                        checkbox &&
                        !checkbox.disabled &&
                        statusCell.textContent.trim() === "awaiting_deliver" &&
                        hasBarcodeLink &&
                        !wasRequested
                    ) {
                        if (!checkbox.checked) {
                            checkbox.click(); // –≠–º—É–ª—è—Ü–∏—è –∫–ª–∏–∫–∞
                            selectedCount++;
                        } else {
                            alreadyCheckedCount++;
                        }
                    }
                });

                const total = selectedCount + alreadyCheckedCount;

                alert(
                    `‚úÖ –ì–∞–ª–æ—á–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è ${selectedCount} –∑–∞–∫–∞–∑–æ–≤.\n` +
                    `‚ÑπÔ∏è –£–∂–µ –±—ã–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: ${alreadyCheckedCount} –∑–∞–∫–∞–∑–æ–≤.\n` +
                    `üì¶ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: ${total}`
                );
            } catch (error) {
                alert(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}`);
            }
        }
    });
});
